{"ast":null,"code":"import _slicedToArray from \"C:/Users/Tanh/Music/ShopTTT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Tanh\\\\Music\\\\ShopTTT\\\\client\\\\src\\\\components\\\\AppChat\\\\Components\\\\TypeMessage\\\\TypeMessage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TypeMessage(props) {\n  _s();\n\n  var onSubmit = props.onSubmit;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var handleValueChange = function handleValueChange(e) {\n    setValue(e.target.value);\n  };\n\n  var handleFormSubmit = function handleFormSubmit(e) {\n    e.preventDefault();\n    if (!onSubmit || value === \"\") return;\n    onSubmit(value); //set value after submit\n\n    setValue(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleFormSubmit,\n      className: \"chatuser-typemessage\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Type a message\",\n        type: \"text\",\n        value: value,\n        onChange: handleValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"G\\u1EEDi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TypeMessage, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n\n_c = TypeMessage;\nexport default TypeMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"TypeMessage\");","map":{"version":3,"sources":["C:/Users/Tanh/Music/ShopTTT/client/src/components/AppChat/Components/TypeMessage/TypeMessage.js"],"names":["React","useState","TypeMessage","props","onSubmit","value","setValue","handleValueChange","e","target","handleFormSubmit","preventDefault"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAC1B,MAAQC,QAAR,GAAqBD,KAArB,CAAQC,QAAR;;AACA,kBAA0BH,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOI,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAO;AAC/BF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACD,GAFD;;AAIA,MAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,CAAD,EAAO;AAC9BA,IAAAA,CAAC,CAACG,cAAF;AAEA,QAAI,CAACP,QAAD,IAAaC,KAAK,KAAK,EAA3B,EAA+B;AAE/BD,IAAAA,QAAQ,CAACC,KAAD,CAAR,CAL8B,CAM9B;;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GARD;;AASA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEI,gBAAhB;AAAkC,MAAA,SAAS,EAAC,sBAA5C;AAAA,8BACE;AACE,QAAA,WAAW,EAAC,gBADd;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEL,KAHT;AAIE,QAAA,QAAQ,EAAEE;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GA9BQL,W;;KAAAA,W;AAgCT,eAAeA,WAAf","sourcesContent":["import React, {useState} from \"react\";\n\nfunction TypeMessage(props) {\n  const { onSubmit } = props;\n  const [value, setValue] = useState(\"\");\n\n  const handleValueChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    if (!onSubmit || value === \"\") return;\n\n    onSubmit(value);\n    //set value after submit\n    setValue(\"\");\n  };\n  return (\n    <div>\n      <form onSubmit={handleFormSubmit} className=\"chatuser-typemessage\">\n        <input\n          placeholder=\"Type a message\"\n          type=\"text\"\n          value={value}\n          onChange={handleValueChange}\n        />\n        <button type=\"submit\">Gá»­i</button>\n      </form>\n    </div>\n  );\n}\n\nexport default TypeMessage;\n"]},"metadata":{},"sourceType":"module"}