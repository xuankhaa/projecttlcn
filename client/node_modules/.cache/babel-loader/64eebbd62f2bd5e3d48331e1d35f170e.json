{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/hoat/OneDrive - Hochiminh City University of Education/.gradle/Desktop/r/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/hoat/OneDrive - Hochiminh City University of Education/.gradle/Desktop/r/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nexport var getAllConversationList = function getAllConversationList(product) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('http://localhost:4000/chat');\n\n            case 3:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              dispatch({\n                type: 'GET_ALL_CONVERSATION',\n                payload: data\n              });\n              _context.next = 10;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var updateIdConversation = function updateIdConversation(conversation) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              dispatch({\n                type: 'UPDATE_ID_CONVERSATION',\n                payload: conversation\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var updateLastMessageConversation = function updateLastMessageConversation(message) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              dispatch({\n                type: 'UPDATE_LAST_MESSAGE_CONVERSATION',\n                payload: message\n              });\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var showConversation = function showConversation(conversation) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              dispatch({\n                type: 'SHOW_CONVERSATION',\n                payload: conversation\n              });\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var SeenConversation = function SeenConversation(idConversation) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              dispatch({\n                type: 'SEEN_CONVERSATION',\n                payload: idConversation\n              });\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/hoat/OneDrive - Hochiminh City University of Education/.gradle/Desktop/r/client/src/actions/ChatAction.js"],"names":["axios","getAllConversationList","product","dispatch","get","data","type","payload","updateIdConversation","conversation","updateLastMessageConversation","message","showConversation","SeenConversation","idConversation"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,OAAD;AAAA;AAAA,wEAAa,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEtBH,KAAK,CAACI,GAAN,CAAU,4BAAV,CAFsB;;AAAA;AAAA;AAEpCC,cAAAA,IAFoC,oBAEpCA,IAFoC;AAG3CF,cAAAA,QAAQ,CAAC;AAACG,gBAAAA,IAAI,EAAE,sBAAP;AAA+BC,gBAAAA,OAAO,EAAEF;AAAxC,eAAD,CAAR;AAH2C;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B;AAQP,OAAO,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,YAAD;AAAA;AAAA,yEAAkB,kBAAON,QAAP;AAAA;AAAA;AAAA;AAAA;AAClDA,cAAAA,QAAQ,CAAC;AAACG,gBAAAA,IAAI,EAAE,wBAAP;AAAiCC,gBAAAA,OAAO,EAAEE;AAA1C,eAAD,CAAR;;AADkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;AAIP,OAAO,IAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACC,OAAD;AAAA;AAAA,yEAAa,kBAAOR,QAAP;AAAA;AAAA;AAAA;AAAA;AACtDA,cAAAA,QAAQ,CAAC;AAACG,gBAAAA,IAAI,EAAE,kCAAP;AAA2CC,gBAAAA,OAAO,EAAEI;AAApD,eAAD,CAAR;;AADsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtC;AAIP,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACH,YAAD;AAAA;AAAA,yEAAkB,kBAAON,QAAP;AAAA;AAAA;AAAA;AAAA;AAC9CA,cAAAA,QAAQ,CAAC;AAACG,gBAAAA,IAAI,EAAE,mBAAP;AAA4BC,gBAAAA,OAAO,EAAEE;AAArC,eAAD,CAAR;;AAD8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAlB;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AAIP,OAAO,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,cAAD;AAAA;AAAA,yEAAoB,kBAAOX,QAAP;AAAA;AAAA;AAAA;AAAA;AAChDA,cAAAA,QAAQ,CAAC;AAACG,gBAAAA,IAAI,EAAE,mBAAP;AAA4BC,gBAAAA,OAAO,EAAEO;AAArC,eAAD,CAAR;;AADgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAApB;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB","sourcesContent":["import axios from \"axios\"\n\nexport const getAllConversationList = (product) => async (dispatch) => {\n    try {\n        const {data} = await axios.get('http://localhost:4000/chat')\n        dispatch({type: 'GET_ALL_CONVERSATION', payload: data})\n    } catch (error) {\n    }\n}\n\nexport const updateIdConversation = (conversation) => async (dispatch) => {\n    dispatch({type: 'UPDATE_ID_CONVERSATION', payload: conversation})\n}\n\nexport const updateLastMessageConversation = (message) => async (dispatch) => {\n    dispatch({type: 'UPDATE_LAST_MESSAGE_CONVERSATION', payload: message})\n}\n\nexport const showConversation = (conversation) => async (dispatch) => {\n    dispatch({type: 'SHOW_CONVERSATION', payload: conversation})\n}\n\nexport const SeenConversation = (idConversation) => async (dispatch) => {\n    dispatch({type: 'SEEN_CONVERSATION', payload: idConversation})\n}"]},"metadata":{},"sourceType":"module"}