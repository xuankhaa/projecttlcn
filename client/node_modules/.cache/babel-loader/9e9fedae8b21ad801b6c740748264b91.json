{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Tanh/Music/ShopTTT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Tanh/Music/ShopTTT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nexport var getAllTypeProduct = function getAllTypeProduct() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get('http://localhost:4000/typeList');\n\n            case 3:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              dispatch({\n                type: 'GET_ALL_TYPE_PRODUCT',\n                payload: data\n              });\n              _context.next = 10;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var CreateNewTypeProduct = function CreateNewTypeProduct(type) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return axios.post(\"http://localhost:4000/typeList/create\", type);\n\n            case 3:\n              _yield$axios$post = _context2.sent;\n              data = _yield$axios$post.data;\n              dispatch({\n                type: 'CREATE_NEW_TYPE_PRODUCT',\n                payload: data\n              });\n              _context2.next = 10;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 8]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteTypeProduct = function deleteTypeProduct(type) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var _yield$axios$delete, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return axios.delete(\"http://localhost:4000/typeList/delete/\".concat(type._id));\n\n            case 3:\n              _yield$axios$delete = _context3.sent;\n              data = _yield$axios$delete.data;\n              dispatch({\n                type: 'DELETE_TYPE_PRODUCT',\n                payload: data\n              });\n              _context3.next = 10;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 8]]);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/Tanh/Music/ShopTTT/client/src/actions/ListTypeProductAction.js"],"names":["axios","getAllTypeProduct","dispatch","get","data","type","payload","CreateNewTypeProduct","post","deleteTypeProduct","delete","_id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA,wEAAM,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEVF,KAAK,CAACG,GAAN,CAAU,gCAAV,CAFU;;AAAA;AAAA;AAExBC,cAAAA,IAFwB,oBAExBA,IAFwB;AAG/BF,cAAAA,QAAQ,CAAC;AAACG,gBAAAA,IAAI,EAAE,sBAAP;AAA+BC,gBAAAA,OAAO,EAAEF;AAAxC,eAAD,CAAR;AAH+B;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;AAQP,OAAO,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACF,IAAD;AAAA;AAAA,yEAAU,kBAAOH,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEjBF,KAAK,CAACQ,IAAN,0CAAoDH,IAApD,CAFiB;;AAAA;AAAA;AAE/BD,cAAAA,IAF+B,qBAE/BA,IAF+B;AAGtCF,cAAAA,QAAQ,CAAC;AAACG,gBAAAA,IAAI,EAAE,yBAAP;AAAkCC,gBAAAA,OAAO,EAAEF;AAA3C,eAAD,CAAR;AAHsC;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;AAQP,OAAO,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAACJ,IAAD;AAAA;AAAA,yEAAU,kBAAOH,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEdF,KAAK,CAACU,MAAN,iDAAsDL,IAAI,CAACM,GAA3D,EAFc;;AAAA;AAAA;AAE5BP,cAAAA,IAF4B,uBAE5BA,IAF4B;AAGnCF,cAAAA,QAAQ,CAAC;AAACG,gBAAAA,IAAI,EAAE,qBAAP;AAA8BC,gBAAAA,OAAO,EAAEF;AAAvC,eAAD,CAAR;AAHmC;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B","sourcesContent":["import axios from 'axios'\n\nexport const getAllTypeProduct = () => async (dispatch) => {\n    try {\n        const {data} = await axios.get('http://localhost:4000/typeList')\n        dispatch({type: 'GET_ALL_TYPE_PRODUCT', payload: data})\n    } catch (error) {\n    }\n}\n\nexport const CreateNewTypeProduct = (type) => async (dispatch) => {\n    try {\n        const {data} = await axios.post(`http://localhost:4000/typeList/create`, type)\n        dispatch({type: 'CREATE_NEW_TYPE_PRODUCT', payload: data})\n    } catch (error) {\n    }\n}\n\nexport const deleteTypeProduct = (type) => async (dispatch) => {\n    try {\n        const {data} = await axios.delete(`http://localhost:4000/typeList/delete/${type._id}`)\n        dispatch({type: 'DELETE_TYPE_PRODUCT', payload: data})\n    } catch (error) {\n    }\n}"]},"metadata":{},"sourceType":"module"}