{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Tanh/Music/ShopTTT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/Tanh/Music/ShopTTT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Tanh/Music/ShopTTT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/Tanh/Music/ShopTTT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Tanh\\\\Music\\\\ShopTTT\\\\client\\\\src\\\\components\\\\Admin\\\\components\\\\AppChat\\\\Chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport io from \"socket.io-client\";\nimport { useSelector } from \"react-redux\";\nimport ListMessage from \"./ListMessage\";\nimport TypeMessage from \"./TypeMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat(props) {\n  _s();\n\n  var socket;\n  var ENDPOINT = \"localhost:5000\";\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.userSignin;\n  }),\n      userInfo = _useSelector.userInfo;\n\n  var idConversation = useSelector(function (state) {\n    return state.chat.idConversation;\n  });\n  var nameConversation = useSelector(function (state) {\n    return state.chat.nameConversation;\n  });\n  useEffect(function () {\n    if (!idConversation) return;\n\n    var getAllMessageByConversation = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$axios$get, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"http://localhost:4000/chat/message?idConversation=\".concat(idConversation));\n\n              case 2:\n                _yield$axios$get = _context.sent;\n                data = _yield$axios$get.data;\n                setMessages(data.messageList);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getAllMessageByConversation() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getAllMessageByConversation();\n  }, [idConversation]);\n  useEffect(function () {\n    socket = io(ENDPOINT);\n    socket.emit(\"admin_join_conversation\", idConversation);\n    socket.on(\"newMessage\", function (message) {\n      setMessages([].concat(_toConsumableArray(messages), [message]));\n    });\n    return function () {\n      return socket.disconnect();\n    };\n  });\n  useEffect(function () {\n    var scrollMessage = function scrollMessage() {\n      var element = document.querySelector(\".ad-chatuser-listmessage\");\n      element.scrollTop = element.scrollHeight;\n    };\n\n    scrollMessage();\n  });\n\n  var handleFormSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(message) {\n      var sender, payload, _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              sender = userInfo.name;\n              payload = {\n                sender: sender,\n                message: message,\n                idConversation: idConversation\n              };\n              _context2.next = 4;\n              return axios.post(\"http://localhost:4000/chat/save\", payload);\n\n            case 4:\n              _yield$axios$post = _context2.sent;\n              data = _yield$axios$post.data;\n              socket.emit('chat', data);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleFormSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ad-chatuser\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ad-chatuser-user\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ad-chatuser-user-name\",\n        children: nameConversation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), messages ? /*#__PURE__*/_jsxDEV(ListMessage, {\n      messages: messages,\n      user: userInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(TypeMessage, {\n      onSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Chat, \"A/VuqG0GZ3ISvKYWRTQTZKzkgD0=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/Tanh/Music/ShopTTT/client/src/components/Admin/components/AppChat/Chat/Chat.js"],"names":["React","useEffect","useState","axios","io","useSelector","ListMessage","TypeMessage","Chat","props","socket","ENDPOINT","messages","setMessages","state","userSignin","userInfo","idConversation","chat","nameConversation","getAllMessageByConversation","get","data","messageList","emit","on","message","disconnect","scrollMessage","element","document","querySelector","scrollTop","scrollHeight","handleFormSubmit","sender","name","payload","post"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport io from \"socket.io-client\";\nimport { useSelector } from \"react-redux\";\nimport ListMessage from \"./ListMessage\";\nimport TypeMessage from \"./TypeMessage\";\n\nfunction Chat(props) {\n  let socket;\n  const ENDPOINT = \"localhost:5000\";\n  const [messages, setMessages] = useState([]);\n  const { userInfo } = useSelector((state) => state.userSignin);\n  const idConversation = useSelector((state) => state.chat.idConversation);\n  const nameConversation = useSelector(state => state.chat.nameConversation)\n\n  useEffect(() => {\n    if (!idConversation) return;\n    const getAllMessageByConversation = async () => {\n      const { data } = await axios.get(\n        `http://localhost:4000/chat/message?idConversation=${idConversation}`\n      );\n      setMessages(data.messageList);\n    };\n\n    getAllMessageByConversation();\n  }, [idConversation]);\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n\n    socket.emit(\"admin_join_conversation\", idConversation);\n\n    socket.on(\"newMessage\", (message) => {\n      setMessages([...messages, message]);\n    });\n\n    return () => socket.disconnect();\n  });\n\n  useEffect(() => {\n    const scrollMessage = () => {\n      var element = document.querySelector(\".ad-chatuser-listmessage\");\n      element.scrollTop = element.scrollHeight;\n    }\n    \n      scrollMessage()\n\n  })\n\n  const handleFormSubmit = async (message) => {\n    const sender = userInfo.name;\n\n    const payload = {\n      sender,\n      message,\n      idConversation,\n    };\n    const { data } = await axios.post(\n      \"http://localhost:4000/chat/save\",\n      payload\n    );\n    socket.emit('chat', data);\n  };\n  return (\n   \n      <div className=\"ad-chatuser\">\n        <div className=\"ad-chatuser-user\">\n          <span className=\"ad-chatuser-user-name\">{nameConversation}</span>\n        </div>\n\n        {messages ? (\n          <ListMessage messages={messages} user={userInfo}></ListMessage>\n        ) : (\n          \"\"\n        )}\n\n        <TypeMessage onSubmit={handleFormSubmit}></TypeMessage>\n      </div>\n      \n   \n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}