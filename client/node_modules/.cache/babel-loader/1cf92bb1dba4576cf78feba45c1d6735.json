{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Tanh/Music/ShopTTT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:/Users/Tanh/Music/ShopTTT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport var ChatReducer = function ChatReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'GET_ALL_CONVERSATION':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          conversationList: action.payload\n        });\n      }\n\n    case 'UPDATE_ID_CONVERSATION':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          idConversation: action.payload._id,\n          nameConversation: action.payload.nameConversation\n        });\n      }\n\n    case 'UPDATE_LAST_MESSAGE_CONVERSATION':\n      {\n        var arr = _toConsumableArray(state.conversationList);\n\n        var index = arr.findIndex(function (item) {\n          return item.idUser === action.payload.idUser;\n        });\n        arr[index] = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          conversationList: arr\n        });\n      }\n\n    case 'SHOW_CONVERSATION':\n      {\n        var _arr = _toConsumableArray(state.conversationList);\n\n        var _index = _arr.findIndex(function (item) {\n          return item.idUser === action.payload.idUser;\n        });\n\n        var newConversation = action.payload;\n\n        if (_index < 0) {\n          _arr.push(newConversation);\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          conversationList: _arr\n        });\n      }\n\n    case 'SEEN_CONVERSATION':\n      {\n        var _arr2 = _toConsumableArray(state.conversationList);\n\n        var _index2 = _arr2.findIndex(function (item) {\n          return item.idUser === action.payload.idUser;\n        });\n\n        var _newConversation = action.payload;\n\n        if (_index2 < 0) {\n          _arr2.push(_newConversation);\n        }\n\n        return _objectSpread(_objectSpread({}, state), {}, {\n          conversationList: _arr2\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n_c = ChatReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatReducer\");","map":{"version":3,"sources":["C:/Users/Tanh/Music/ShopTTT/client/src/reducers/ChatReducer.js"],"names":["ChatReducer","state","action","type","conversationList","payload","idConversation","_id","nameConversation","arr","index","findIndex","item","idUser","newConversation","push"],"mappings":";;AAAA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,sBAAL;AAA4B;AACxB,+CAAWF,KAAX;AAAkBG,UAAAA,gBAAgB,EAAEF,MAAM,CAACG;AAA3C;AACH;;AAED,SAAK,wBAAL;AAA8B;AAC1B,+CAAWJ,KAAX;AAAkBK,UAAAA,cAAc,EAAEJ,MAAM,CAACG,OAAP,CAAeE,GAAjD;AAAsDC,UAAAA,gBAAgB,EAAEN,MAAM,CAACG,OAAP,CAAeG;AAAvF;AACH;;AAED,SAAK,kCAAL;AAAwC;AACpC,YAAMC,GAAG,sBAAOR,KAAK,CAACG,gBAAb,CAAT;;AACA,YAAMM,KAAK,GAAGD,GAAG,CAACE,SAAJ,CAAc,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,MAAL,KAAgBX,MAAM,CAACG,OAAP,CAAeQ,MAAnC;AAAA,SAAlB,CAAd;AACAJ,QAAAA,GAAG,CAACC,KAAD,CAAH,GAAaR,MAAM,CAACG,OAApB;AAEA,+CAAWJ,KAAX;AAAkBG,UAAAA,gBAAgB,EAAEK;AAApC;AACH;;AAED,SAAK,mBAAL;AAAyB;AACrB,YAAMA,IAAG,sBAAOR,KAAK,CAACG,gBAAb,CAAT;;AACA,YAAMM,MAAK,GAAGD,IAAG,CAACE,SAAJ,CAAc,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,MAAL,KAAgBX,MAAM,CAACG,OAAP,CAAeQ,MAAnC;AAAA,SAAlB,CAAd;;AACA,YAAMC,eAAe,GAAGZ,MAAM,CAACG,OAA/B;;AACA,YAAGK,MAAK,GAAG,CAAX,EAAa;AACTD,UAAAA,IAAG,CAACM,IAAJ,CAASD,eAAT;AACH;;AAED,+CAAWb,KAAX;AAAkBG,UAAAA,gBAAgB,EAAEK;AAApC;AACH;;AAED,SAAK,mBAAL;AAAyB;AACrB,YAAMA,KAAG,sBAAOR,KAAK,CAACG,gBAAb,CAAT;;AACA,YAAMM,OAAK,GAAGD,KAAG,CAACE,SAAJ,CAAc,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,MAAL,KAAgBX,MAAM,CAACG,OAAP,CAAeQ,MAAnC;AAAA,SAAlB,CAAd;;AACA,YAAMC,gBAAe,GAAGZ,MAAM,CAACG,OAA/B;;AACA,YAAGK,OAAK,GAAG,CAAX,EAAa;AACTD,UAAAA,KAAG,CAACM,IAAJ,CAASD,gBAAT;AACH;;AAED,+CAAWb,KAAX;AAAkBG,UAAAA,gBAAgB,EAAEK;AAApC;AACH;;AAED;AAAS,aAAOR,KAAP;AAvCb;AAyCH,CA1CM;KAAMD,W","sourcesContent":["export const ChatReducer = (state = {}, action) => {\n    switch (action.type) {\n        case 'GET_ALL_CONVERSATION':{\n            return {...state, conversationList: action.payload}\n        }\n\n        case 'UPDATE_ID_CONVERSATION':{\n            return {...state, idConversation: action.payload._id, nameConversation: action.payload.nameConversation}\n        }\n\n        case 'UPDATE_LAST_MESSAGE_CONVERSATION':{\n            const arr = [...state.conversationList]\n            const index = arr.findIndex(item => item.idUser === action.payload.idUser)\n            arr[index] = action.payload\n            \n            return {...state, conversationList: arr};\n        }\n\n        case 'SHOW_CONVERSATION':{\n            const arr = [...state.conversationList]\n            const index = arr.findIndex(item => item.idUser === action.payload.idUser)\n            const newConversation = action.payload\n            if(index < 0){\n                arr.push(newConversation)\n            }\n\n            return {...state, conversationList: arr};\n        }\n\n        case 'SEEN_CONVERSATION':{\n            const arr = [...state.conversationList]\n            const index = arr.findIndex(item => item.idUser === action.payload.idUser)\n            const newConversation = action.payload\n            if(index < 0){\n                arr.push(newConversation)\n            }\n\n            return {...state, conversationList: arr};\n        }\n    \n        default: return state\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}