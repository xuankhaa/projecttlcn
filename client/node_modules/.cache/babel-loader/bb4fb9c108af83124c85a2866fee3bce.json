{"ast":null,"code":"import _objectSpread from \"C:/Users/Tanh/Music/ShopTTT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:/Users/Tanh/Music/ShopTTT/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nexport var CartReducer = function CartReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    cartItems: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      {\n        var newList = _toConsumableArray(state.cartItems);\n\n        var exists = newList.find(function (item) {\n          return item._id === action.payload._id;\n        });\n\n        if (exists) {\n          newList = newList.map(function (item) {\n            return item._id === action.payload._id ? _objectSpread(_objectSpread({}, exists), {}, {\n              qty: exists.qty + 1\n            }) : item;\n          });\n        } else {\n          var product = _objectSpread(_objectSpread({}, action.payload), {}, {\n            qty: 1\n          });\n\n          newList.push(product);\n        }\n\n        localStorage.setItem('cartItems', JSON.stringify(newList));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cartItems: newList\n        });\n      }\n\n    case 'DELETE_TO_CART':\n      {\n        var _newList = _toConsumableArray(state.cartItems);\n\n        var _exists = _newList.find(function (item) {\n          return item._id === action.payload._id;\n        });\n\n        if (_exists.qty === 1) {\n          _newList = _newList.filter(function (item) {\n            return item._id !== _exists._id;\n          });\n        } else {\n          _newList = _newList.map(function (item) {\n            return item._id === action.payload._id ? _objectSpread(_objectSpread({}, _exists), {}, {\n              qty: _exists.qty - 1\n            }) : item;\n          });\n        }\n\n        localStorage.setItem('cartItems', JSON.stringify(_newList));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cartItems: _newList\n        });\n      }\n\n    case 'DELETE_QTY_PRODUCT':\n      {\n        var _newList2 = _toConsumableArray(state.cartItems);\n\n        _newList2 = _newList2.filter(function (item) {\n          return item._id !== action.payload._id;\n        });\n        localStorage.setItem('cartItems', JSON.stringify(_newList2));\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cartItems: _newList2\n        });\n      }\n\n    case 'CART_EMTY':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          cartItems: []\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n_c = CartReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartReducer\");","map":{"version":3,"sources":["C:/Users/Tanh/Music/ShopTTT/client/src/reducers/CartReducer.js"],"names":["CartReducer","state","cartItems","action","type","newList","exists","find","item","_id","payload","map","qty","product","push","localStorage","setItem","JSON","stringify","filter"],"mappings":"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","sourcesContent":["\nexport const CartReducer = (state = {cartItems: []}, action) => {\n    switch (action.type) {\n        case 'ADD_TO_CART': {\n            let newList = [...state.cartItems]\n            const exists = newList.find(item => item._id === action.payload._id)\n            if (exists) {\n                newList = newList.map((item) => item._id === action.payload._id ? { ...exists, qty: exists.qty + 1 } : item)\n            }else{\n                const product = {\n                    ...action.payload,\n                    qty: 1,\n                }\n                newList.push(product);\n            }\n\n            localStorage.setItem('cartItems', JSON.stringify(newList))\n            return {\n                ...state,\n                cartItems: newList\n            };\n        }\n            \n        \n        case 'DELETE_TO_CART': {\n            let newList = [...state.cartItems]\n            const exists = newList.find(item => item._id === action.payload._id)\n            if (exists.qty === 1) {\n                newList = newList.filter((item) => item._id !== exists._id)\n            }else{\n                newList = newList.map((item) => item._id === action.payload._id ? { ...exists, qty: exists.qty - 1 } : item)\n            }\n    \n            localStorage.setItem('cartItems', JSON.stringify(newList))\n            return {\n                ...state,\n                cartItems: newList\n            };\n        }\n            \n        case 'DELETE_QTY_PRODUCT': {\n            let newList = [...state.cartItems]\n            \n            newList = newList.filter((item) => item._id !== action.payload._id)\n            \n            localStorage.setItem('cartItems', JSON.stringify(newList))\n            return {\n                ...state,\n                cartItems: newList\n            };\n        }\n\n        case 'CART_EMTY':{\n            return {...state, cartItems: []}\n        }\n        default:\n            return state;\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}