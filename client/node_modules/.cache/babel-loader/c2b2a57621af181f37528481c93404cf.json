{"ast":null,"code":"import _toConsumableArray from \"C:/Users/hoat/OneDrive - Hochiminh City University of Education/.gradle/Desktop/r/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"C:/Users/hoat/OneDrive - Hochiminh City University of Education/.gradle/Desktop/r/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/hoat/OneDrive - Hochiminh City University of Education/.gradle/Desktop/r/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/hoat/OneDrive - Hochiminh City University of Education/.gradle/Desktop/r/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\hoat\\\\OneDrive - Hochiminh City University of Education\\\\.gradle\\\\Desktop\\\\r\\\\client\\\\src\\\\components\\\\AppChat\\\\AppChat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport ListMessage from \"./Components/ListMessage.js/ListMessage\";\nimport TypeMessage from \"./Components/TypeMessage/TypeMessage\";\nimport './AppChat.css';\nimport { LineOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar socket;\n\nfunction AppChat(props) {\n  _s();\n\n  var ENDPOINT = \"http://localhost:4000\";\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      messages = _useState2[0],\n      setMessages = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openChat = _useState4[0],\n      setOpenChat = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.userSignin;\n  }),\n      userInfo = _useSelector.userInfo;\n\n  useEffect(function () {\n    var getAllMessageByConversation = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$axios$get, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"http://localhost:4000/chat/message?idUser=\".concat(userInfo._id));\n\n              case 2:\n                _yield$axios$get = _context.sent;\n                data = _yield$axios$get.data;\n                setMessages(data.messageList);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getAllMessageByConversation() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getAllMessageByConversation();\n  }, []);\n  useEffect(function () {\n    socket = io(ENDPOINT);\n    socket.emit('join_conversation', userInfo._id); //setup response\n\n    socket.on('newMessage', function (message) {\n      setMessages([].concat(_toConsumableArray(messages), [message]));\n    }); // disconnect ||cleanup the effect\n    // return () => socket.disconnect();\n    // eslint-disable-next-line\n  }, [messages]);\n  useEffect(function () {\n    var scrollMessage = function scrollMessage() {\n      var element = document.querySelector(\".chatuser-listmessage\");\n      element.scrollTop = element.scrollHeight;\n    };\n\n    if (openChat) {\n      scrollMessage();\n    }\n  });\n\n  var handleChatFormSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(message) {\n      var sender, idConversation, payload, _yield$axios$post2, data;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              sender = userInfo.name; //emit create conversation and chat\n\n              if (!(messages.length === 0)) {\n                _context3.next = 6;\n                break;\n              }\n\n              socket.emit('create_conversation', userInfo);\n              socket.on('response_room', /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(conversation) {\n                  var payload, _yield$axios$post, data;\n\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          payload = {\n                            sender: sender,\n                            message: message,\n                            idConversation: conversation._id\n                          };\n                          _context2.next = 3;\n                          return axios.post('http://localhost:4000/chat/save', payload);\n\n                        case 3:\n                          _yield$axios$post = _context2.sent;\n                          data = _yield$axios$post.data;\n                          socket.emit('chat', data);\n\n                        case 6:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x2) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n              _context3.next = 13;\n              break;\n\n            case 6:\n              idConversation = messages[0].idConversation._id || messages[0].idConversation; // request save message\n\n              payload = {\n                sender: sender,\n                message: message,\n                idConversation: idConversation\n              };\n              _context3.next = 10;\n              return axios.post('http://localhost:4000/chat/save', payload);\n\n            case 10:\n              _yield$axios$post2 = _context3.sent;\n              data = _yield$axios$post2.data;\n              socket.emit('chat', data);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function handleChatFormSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appchat\",\n    children: [openChat ? '' : {\n      /* <div className=\"openchat\" onClick={() => setOpenChat(!openChat)}>\n       Chat với nhân viên\n      </div> */\n    }, openChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatuser\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatuser-user\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chatuser-user-name\",\n          children: \"Shop TTT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"chatuser-user-line\",\n          onClick: function onClick() {\n            return setOpenChat(!openChat);\n          },\n          children: /*#__PURE__*/_jsxDEV(LineOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 87\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), messages ? /*#__PURE__*/_jsxDEV(ListMessage, {\n        messages: messages,\n        user: userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 23\n      }, this) : '', /*#__PURE__*/_jsxDEV(TypeMessage, {\n        onSubmit: handleChatFormSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }, this);\n}\n\n_s(AppChat, \"tGGHVAhaf1LlT7FgJngOtQY8dUQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = AppChat;\nexport default AppChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppChat\");","map":{"version":3,"sources":["C:/Users/hoat/OneDrive - Hochiminh City University of Education/.gradle/Desktop/r/client/src/components/AppChat/AppChat.js"],"names":["React","useEffect","useState","io","useSelector","axios","ListMessage","TypeMessage","LineOutlined","socket","AppChat","props","ENDPOINT","messages","setMessages","openChat","setOpenChat","state","userSignin","userInfo","getAllMessageByConversation","get","_id","data","messageList","emit","on","message","scrollMessage","element","document","querySelector","scrollTop","scrollHeight","handleChatFormSubmit","sender","name","length","conversation","payload","idConversation","post"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport ListMessage from \"./Components/ListMessage.js/ListMessage\";\nimport TypeMessage from \"./Components/TypeMessage/TypeMessage\";\nimport './AppChat.css'\nimport { LineOutlined } from '@ant-design/icons';\n\nlet socket;\n\nfunction AppChat(props) {\n  const ENDPOINT = \"http://localhost:4000\";\n  const [messages, setMessages] = useState([]);\n  const [openChat, setOpenChat] = useState(false)\n  const { userInfo } = useSelector((state) => state.userSignin)\n\n  useEffect(() => {\n    const getAllMessageByConversation = async () => {\n      const {data}  = await axios.get(\n        `http://localhost:4000/chat/message?idUser=${userInfo._id}`\n      );\n      setMessages(data.messageList);\n    }\n\n    getAllMessageByConversation()\n  }, []);\n\n  useEffect(() => {\n\n    socket = io(ENDPOINT);\n\n    socket.emit('join_conversation', userInfo._id);\n    //setup response\n    socket.on('newMessage', (message) => {\n      setMessages([...messages, message]);\n    });\n\n    // disconnect ||cleanup the effect\n    // return () => socket.disconnect();\n    // eslint-disable-next-line\n  }, [messages]);\n\n  useEffect(() => {\n    const scrollMessage = () => {\n      var element = document.querySelector(\".chatuser-listmessage\");\n      element.scrollTop = element.scrollHeight;\n    }\n    if(openChat){\n      scrollMessage()\n    }\n  })\n\n  const handleChatFormSubmit = async (message) => {\n    const sender = userInfo.name;\n\n    //emit create conversation and chat\n    if (messages.length === 0) {\n      socket.emit('create_conversation', userInfo);\n\n      socket.on('response_room', async (conversation) => {\n        const payload = {\n          sender,\n          message,\n          idConversation: conversation._id,\n        };\n        const {data} = await axios.post('http://localhost:4000/chat/save', payload);\n        socket.emit('chat', data);\n      });\n    } else {\n      const idConversation = messages[0].idConversation._id || messages[0].idConversation;\n      // request save message\n      const payload = {\n        sender,\n        message,\n        idConversation,\n      };\n      const {data} = await axios.post('http://localhost:4000/chat/save', payload)\n      socket.emit('chat', data);\n    } \n  };\n\n  \n  return (\n  <div className=\"appchat\">\n      \n      {\n        openChat ? '' : (\n          {/* <div className=\"openchat\" onClick={() => setOpenChat(!openChat)}>\n            Chat với nhân viên\n          </div> */}\n        )\n      }\n      \n      {\n        openChat ? (<div className=\"chatuser\">\n        <div className=\"chatuser-user\">\n          <span className=\"chatuser-user-name\">Shop TTT</span>\n          <span className=\"chatuser-user-line\" onClick={() => setOpenChat(!openChat)}><LineOutlined></LineOutlined></span>\n        </div>\n\n        {\n          messages ? (<ListMessage messages={messages} user={userInfo}></ListMessage>) : ''\n        }\n\n      <TypeMessage onSubmit={handleChatFormSubmit} ></TypeMessage>\n\n      </div>) : ''\n      }\n  </div>);\n}\n\nexport default AppChat;\n"]},"metadata":{},"sourceType":"module"}